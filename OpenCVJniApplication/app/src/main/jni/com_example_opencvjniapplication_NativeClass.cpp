/* DO NOT EDIT THIS FILE - it is machine generated */
#include "com_example_opencvjniapplication_NativeClass.h"
/* Header for class com_example_opencvjniapplication_NativeClass */
#include "opencv2/core/core.hpp"
#include <opencv2/highgui/highgui.hpp>
#include <opencv2/imgproc/imgproc.hpp>
#include <stdio.h>

using namespace std;
using namespace cv;

int toGray(Mat img, Mat& gray);

JNIEXPORT jstring JNICALL Java_com_example_opencvjniapplication_NativeClass_getStringFromNative
  (JNIEnv * env, jobject obj){
    return env->NewStringUTF("Hello WORLD from JNI !!!!!");
}


JNIEXPORT jint JNICALL Java_com_example_opencvjniapplication_convertNativeGray(JNIEnv*, jobject, jlong addrRgba, jlong addrGray) {
  Mat& mRgb = *(Mat*)addrRgba;
  Mat& mGray = *(Mat*)addrGray;

  int conv;
  jint retVal;

  conv = toGray(mRgb, mGray);
  retVal = (jint)conv;

  return retVal;

}

int toGray(Mat img, Mat& gray)
{
  cvtColor(img, gray, CV_RGBA2GRAY); // Assuming RGBA input

  if (gray.rows == img.rows && gray.cols == img.cols)
  {
    return (1);
  }
  return(0);
}
